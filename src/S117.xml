<?xml version="1.0" encoding="UTF-8" ?>
<section xml:id="s-isomorphisms">
<title>Isomorphisms</title>
<idx>Isomorphisms</idx>
<introduction><p>The following informal definition of isomorphic systems should be memorized. No matter how technical a discussion about isomorphic
systems becomes, keep in mind that this is the essence of the concept.</p>

<definition xml:id="def-isomorphism-informal"><title>Isomorphic Systems/Isomorphism - Informal Version</title>
<statement><p>Two algebraic systems are isomorphic if there exists a translation rule between them so that any
true statement in one system can be translated to a true statement in the other.</p></statement></definition> 

<example xml:id="ex-greek-arithmetic"><title>How to Do Greek Arithmetic</title><p>Imagine that you are a six-year-old child who has been reared in an English-speaking family, has moved to Greece, and has been enrolled in a Greek school. Suppose that your new teacher asks the class to do the following addition problem that has been written out in Greek.
  <me>\tau \rho \acute{\iota} \alpha \quad \sigma \upsilon \nu \quad  \tau \acute{\epsilon} \sigma \sigma \varepsilon \rho \alpha \quad \iota \sigma o \acute{\upsilon} \tau \alpha \iota \quad \_\_\_\_</me>
The natural thing for you to do is to take out your Greek-English/English-Greek dictionary and translate the Greek words to English, as outlined
in <xref ref="fig-greek-sum" text="type-global" /> After you've solved the problem, you can consult the same dictionary to find the proper Greek word that the teacher wants. Although
this is not the recommended method of learning a foreign language, it will surely yield the correct answer to the problem. Mathematically, we may
say that the system of Greek integers with addition (<m>\sigma \upsilon \nu</m>) is isomorphic to English integers with addition (plus). The problem
of translation between natural languages is more difficult than this though, because two complete natural languages are not isomorphic, or at least
the isomorphism between them is not contained in a simple dictionary.</p>

		<figure xml:id="fig-greek-sum">
					 <caption>Solution of a Greek arithmetic problem
					 </caption>
					 <image width="70%" source="images/fig-greek-sum.png">
						  <description><p>Solution of a Greek arithmetic problem</p></description>
					 </image>
		</figure>
</example>	
<example xml:id="ex-set-isomorphism"><title>Software Implementation of Sets</title>
<p>In this example, we will describe how set  variables can be implemented on a computer.
We will describe the two systems first and then describe the isomorphism between them.</p>

<p>System 1: The power set of <m>\{1, 2, 3, 4, 5\}</m> with the operation union, <m>\cup</m>. For simplicity, we will only discuss union. However, the other
operations are implemented in a similar way.</p>

<p>System 2: Strings of five bits of computer memory with an OR gate. Individual bit values are either zero or one, so the elements of this system can
be visualized as sequences of five 0's and 1's. An OR gate, <xref ref="fig-set-isomorphism" text="type-global" />, is a small piece of computer hardware that accepts two bit values at any one time and outputs either a zero or one, depending on the inputs. The output of an OR gate is one, except when the two bit values that it accepts are both zero, in which case the output is zero. The operation on this system actually consists of sequentially inputting the values of two bit strings into the OR gate. The result will be a new string of five 0's and 1's. An alternate method of operating in this system is to use five OR gates and to input corresponding pairs of bits from the input strings into the gates concurrently.</p>

<figure xml:id="fig-set-isomorphism">
			 <caption>Translation between sets and strings of bits
			 </caption>
			 <image width="70%" source="images/fig-set-isomorphism.png">
				  <description><p>Translation between sets and strings of bits</p></description>
			 </image>
</figure>
<p>The Isomorphism: Since each system has only one operation, it is clear that union and the OR gate translate into one another. The translation between
sets and bit strings is easiest to describe by showing how to construct a set from a bit string. If <m>a_1a_2a_3a_4a_5</m>, is a bit string in System
2, the set that it translates to contains the number <m>k</m> if and only if <m>a_k</m> equals 1. For example, <m>10001</m> is translated to the set
<m>\{1, 5\}</m>, while the set <m>\{1, 2\}</m> is translated to <m>11000.</m> Now imagine that your computer is like the child who knows English and must
do a Greek problem. To execute a program that has code that includes the set expression <m>\{1, 2\} \cup  \{1, 5\}</m>, it will follow the same procedure
as the child to obtain the result, as shown in <xref ref="fig-set-calculation" text="type-global" />.</p>

          <figure xml:id="fig-set-calculation">
                <caption>Translation of a problem in set theory
                </caption>
                <image width="70%" source="images/fig-set-calculation.png">
                    <description><p>Translation of a problem in set theory</p></description>
                </image>
            </figure>
</example> 
</introduction>
<subsection xml:id="ss-group-isomorphisms"><title>Group Isomorphisms</title>
<example xml:id="ex-log-multiplication"><title>Multiplying without doing multiplication</title>
<p>This isomorphism is between <m>\left[\mathbb{R}^+ ; \cdot \right]</m> and <m>[\mathbb{R};+]</m>. Until the 1970s, when the price of calculators dropped, multiplication and exponentiation were performed with an isomorphism between these systems. The isomorphism <m>\left(\mathbb{R}^+\right.</m> to <m>\mathbb{R}</m>) between the two groups is that <m>\cdot</m> is translated into <m>+</m> and any positive real
number <m>a</m> is translated to the logarithm of <m>a</m>. To translate back from <m>\mathbb{R}</m> to <m>\mathbb{R}^+</m> , you invert the logarithm
function. If base ten logarithms are used, an element of <m>\mathbb{R}</m>, <m>b</m>, will be translated to <m>10^b</m>.  In pre-calculator days, the
translation was done with a table of logarithms or with a slide rule. An example of how the isomorphism is used appears in <xref ref="fig-log-mult" text="type-global" />.</p>
            <figure xml:id="fig-log-mult">
                <caption>Multiplication using logarithms
                </caption>
                <image width="70%" source="images/fig-log-mult.png">
                    <description>Multiplication using logarithms</description>
                </image>
            </figure>
</example>

<p>The following definition of an isomorphism between two groups is a more formal one that appears in most abstract algebra texts. At first glance,
it appears different, it is really a slight variation on the informal definition. It is the common definition because it is easy to apply; that is,
given a function, this definition tells you what to do to determine whether that function is an isomorphism.</p>




<definition xml:id="def-group-isomorphism"><title>Group Isomorphism</title>
<idx><h>Isomorphism</h><h>Group</h></idx>
<notation><usage><m>G_1 \cong G_2</m></usage><description><m>G_1</m> is isomorphic to <m>G_2</m></description></notation>
<statement><p>If <m>\left[G_1 ; *_1\right]</m> and <m>\left[G_2 ; *_2\right]</m> are groups, <m>f: G_1 \to G_2</m> is an isomorphism
from <m>G_1</m> into <m>G_2</m> if: 
<ol marker="(1)">
<li><p> <m>f</m> is a bijection, and</p></li>
<li><p> <m>f\left(a *_1 b\right) = f(a) *_2f(b)</m>   for all <m>a, b\in  G_1</m> </p></li>
</ol></p> 
<p>If such a function exists, then we say <m>G_1</m> is isomorphic to <m>G_2</m>, denoted <m>G_1 \cong G_2</m>.</p></statement>
</definition>

<p>We should note that <q>is isomorphic to</q> is an equivalence relation on the set of all groups.  We leave it to the reader to verify the following. 
		<ul>
		<li><p>The identity function on a group <m>G</m> is an isomorphism.</p></li>
		<li><p>Bijections have inverses, the inverse of an isomorphism is an isomorphism.</p></li>
		<li><p>The composition of any two isomorphisms that can be composed is an isomorphism.</p></li>
		</ul>
 </p>
        <figure xml:id="fig-steps-iso">
                <caption>Steps in proving that <m>G_1</m> and <m>G_2</m> are isomorphic
                </caption>
                <image width="60%" source="images/fig-steps-iso.png">
                    <description><p>Steps in proving that <m>G_1</m> and <m>G_2</m> are isomorphic</p></description>
                </image>
            </figure>

 <note>
<p><ol marker="(a)">
<li><p>  There could be several different isomorphisms between the same pair of groups. Thus, if you are asked to demonstrate that two groups are isomorphic, your answer need not be unique.</p></li>
<li><p>  Any application of this definition requires a procedure outlined in <xref ref="fig-steps-iso" text="type-global" />.
The first condition, that an isomorphism be a bijection, reflects the fact that every true statement in the first group should have exactly one corresponding
true statement in the second group. This is exactly why we run into difficulty in translating between two natural languages. To see how Condition
(b) of the formal definition is consistent with the informal definition, consider the function <m>L:\mathbb{R}^+\to  \mathbb{R}</m> defined by <m>L(x)
= \log _{10}x</m>. The translation diagram between <m>\mathbb{R}^+</m> and <m>\mathbb{R}</m> for the multiplication problem <m>a \cdot  b</m> appears in <xref ref="fig-log-mult-general" text="type-global" />. We arrive at the same result by computing <m>L^{-1} (L(a) + L(b))</m> as we do by computing <m>a \cdot  b</m>. If we apply the function <m>L</m> to the two results, we get the same image:
<mdn> 
 <mrow xml:id="eq-iso">L(a \cdot  b) = L\left(L^{-1}(L(a) + L(b))\right) = L(a) + L(b) </mrow>
</mdn>

since <m>L\left(L^{-1}(x)\right) = x</m>. Note that <xref ref="eq-iso" text="local" /> is exactly Condition b of the formal definition applied to the two groups <m>\mathbb{R}^+</m> and <m>\mathbb{R}</m>.</p></li>
</ol></p>
</note>

<figure xml:id="fig-log-mult-general">
	 <caption>General Multiplication using logarithms
	 </caption>
	 <image width="70%" source="images/fig-log-mult-general.png">
		  <description><p>General Multiplication using logarithms</p></description>
	 </image>
</figure>


<example xml:id="ex-another-iso-pair">
<p> Consider  <m>G= \left\{\left.\left(
\begin{array}{cc}
 1 &amp; a \\
 0 &amp; 1 \\
\end{array}
\right) \right| a \in \mathbb{R}\right\}</m> with matrix multiplication.   The group <m>[\mathbb{R};+]</m> is isomorphic to <m>G</m>.   Our translation
rule is the function <m>f: \mathbb{R} \to G</m> defined by <m>f(a)=\left(
\begin{array}{cc}
 1 &amp; a \\
 0 &amp; 1 \\
\end{array}
\right)</m>.  Since groups have only one operation, there is no need to state explicitly that addition is translated to matrix multiplication. That
<m>f</m> is a bijection is clear from its definition.</p>
<p> If <m>a</m> and <m>b</m> are any real numbers,



<me>
\begin{split}
f(a) f(b) &amp; = \left(
\begin{array}{cc}
 1 &amp; a \\
 0 &amp; 1 \\
\end{array}
\right)\left(
\begin{array}{cc}
 1 &amp; b \\
 0 &amp; 1 \\
\end{array}
\right)\\
&amp; = \left(
\begin{array}{cc}
 1 &amp; a + b \\
 0 &amp; 1 \\
\end{array}
\right)\\
&amp; = f(a + b)
\end{split}
</me>

</p>

<p>We can apply this translation rule to determine the inverse of a matrix in <m>G</m>. We know that <m>a + (-a)=0</m> is a true statement in <m>\mathbb{R}</m>. Using
<m>f</m> to translate this statement, we get



<me>f(a) f(-a) = f(0)</me>
or
<me>\left(
\begin{array}{cc}
 1 &amp; a \\
 0 &amp; 1 \\
\end{array}
\right)\left(
\begin{array}{cc}
 1 &amp; -a \\
 0 &amp; 1 \\
\end{array}
\right)=\left(
\begin{array}{cc}
 1 &amp; 0 \\
 0 &amp; 1 \\
\end{array}
\right)</me>

therefore,



<me>\left(
\begin{array}{cc}
 1 &amp; a \\
 0 &amp; 1 \\
\end{array}
\right)^{-1}= \left(
\begin{array}{cc}
 1 &amp; -a \\
 0 &amp; 1 \\
\end{array}
\right)</me>
</p></example>


<p>The next theorem summarizes some of the general facts about group isomorphisms that are used most often in applications.  We leave the proof to the reader.</p>

<theorem xml:id="theorem-isomorphism-properties"><title>Properties of Isomorphisms</title>
<statement><p>If <m>[G;*]</m> and <m>[H;\diamond ]</m> are groups with identities <m>e</m> and <m>e'</m>, respectively, and <m>T:G \to H</m> is an isomorphism from <m>G</m> into <m>H</m>, then:
<ol marker="(a)">
<li><p> <m>T(e) = e'</m></p></li>
<li><p> <m>T(a)^{-1} = T\left(a^{-1}\right)</m> for all <m>a \in G</m>, and</p></li>
<li><p>If <m>K</m> is a subgroup of <m>G</m>, then <m>T(K) = \{T(a) : a \in K\}</m> is a subgroup of <m>H</m> and is isomorphic to <m>K</m>.</p></li>
</ol></p>
</statement></theorem>  


<p><q>Is isomorphic to</q> is an equivalence relation on the set of all groups. Therefore, the set of all groups is partitioned into equivalence classes, each equivalence class containing groups that are isomorphic to one another.</p>

</subsection>


<subsection><title>
The order sequence of a finite group
</title>
<p><idx>Propp, Jim</idx>This topic is somewhat obscure. 
 It doesn't appear in most texts, but is a nice companion to degree sequences in graph theory.  Recall that every undirected graph has a degree sequence, and graphs with different <xref ref="def-degree-sequence">degree sequences</xref> are not isomorphic. This is a convenient way to identify non-isomorphic graphs. We see below that order sequences play exactly the same role in identifying whether two finite groups are isomorphic.  Furthermore, identical order sequences of two finite groups give an excellent set of hints for constructing an isomorphism, if one such exists.  My collegue, Jim Propp, has been using this idea for a while in his classes and I <q>discovered</q> it later.   Neither of us can claim originality. Much of the following discussion is paraphrased from Jim's notes. </p>

<definition><title>Order Sequence</title><idx>Order Sequence</idx>
<statement><p>The order sequence of a finite group
is the sequence whose terms are the respective orders
of all the elements of the group,
arranged in increasing order.
</p></statement>
</definition>

<p>In <m>\mathbb{Z}_3</m> the element 0 has order 1,
the element 1 has order 3, and the element 2 has order 3,
so the order sequence of this group is 1,3,3.
</p>

<p>In <m>\mathbb{Z}_4</m> the element 0 has order 1, the element 1 has order 4,
the element 2 has order 2, and the element 3 has order 4,
so the order sequence of this group is 1,2,4,4.
(Note that we have arranged the numbers 1,4,2,4 in increasing order.)
</p>

<theorem>
	<statement>
	<p>If <m>G_1</m> and <m>G_2</m> are finite groups
	and <m>f</m> is an isomorphism between them,
	with <m>g \in G_1</m> and <m>f(g) \in G_2</m>,
	the order of <m>g</m> in <m>G_1</m>
	equals the order of <m>f(g)</m> in <m>G_2</m>.
	</p></statement>
</theorem>

<p>Consequently:
</p>

<corollary><statement><p> If two groups are isomorphic,
they have the same order sequence.</p></statement></corollary>


<p>The theorem is a handy tools for proving that
two particular groups are not isomorphic.
Consider the group <m>\mathbb{Z}_2 \times \mathbb{Z}_2</m>;
the element <m>(0,0)</m> has order 1
while the other elements <m>(0,1)</m>, <m>(1,0)</m>, and <m>(1,1)</m>
each have order 2,
implying that the order sequence is 1,2,2,2.
Since this is different from the sequence 1,2,4,4,
the group <m>\mathbb{Z}_2 \times \mathbb{Z}_2</m> is not isomorphic to the group <m>\mathbb{Z}_4</m>.
</p>

<p>Order sequences are also useful in helping one find isomorphisms. 
Consider the group <m>\mathbb{U}_5</m> (the set <m>\{1,2,3,4\}</m> with mod-5 multiplication).
Its order sequence is <m>1,2,4,4</m>,
which suggests that it might be isomorphic to <m>\mathbb{Z}_4</m>.
In fact, any isomorphism <m>f</m> from <m>\mathbb{Z}_4</m> to <m>\mathbb{U}_5</m>
must map <m>0</m> (the only element of order 1 in <m>\mathbb{Z}_4</m>)
to <m>1</m> (the only element of order 1 in <m>\mathbb{U}_4</m>)
and must map <m>2</m> (the only element of order 2 in <m>\mathbb{Z}_4</m>)
to <m>4</m> (the only element of order 2 in <m>\mathbb{U}_4</m>).
There are only two bijections <m>f</m> from <m>\mathbb{Z}_4</m> to <m>\mathbb{U}_4</m>
satisfying <m>f(0) = 1</m> and <m>f(2) = 4</m>,
so these are the only two candidate isomorphisms
(and both candidates turn out to be true isomorphisms).</p>
<p>The following code will compute the order sequence for the group of integers mod <m>n</m>.  The default value of <m>n</m> is 12 and you can change it in the last line of input.
</p>
<sage>
	<input>
		def order_sequence_Z(n):
			G = Integers(n)
			os=[ ]
			for a in G:
				os=os+[a.order()]
			print(sorted(os))

		order_sequence_Z(12)
	</input>
	<output>
		[1, 2, 3, 3, 4, 4, 6, 6, 12, 12, 12, 12]	
	</output>
</sage>

</subsection>


<subsection xml:id="ss-when-are-groups-not-isomorphic"><title>Conditions for groups to not be isomorphic</title>

<p>How do you decide that two groups are not isomorphic to one another? The negation of <q><m>G</m> and <m>H</m> are isomorphic</q> is that no translation rule between <m>G</m> and <m>H</m> exists. If <m>G</m> and <m>H</m> have different cardinalities, then no bijection from <m>G</m> into <m>H</m> can exist. Hence they are not isomorphic. Given that <m>\left| G\right| =\left| H\right|</m>, it is usually impractical to list all bijections from <m>G</m> into <m>H</m> and show that none of them satisfy Condition b of the formal definition. The best way to prove that two groups are not isomorphic is to find a true statement about one group that is not true about the other group. We illustrate this method
in the following checklist that you can apply to most pairs of non-isomorphic groups in this book.</p>

<p>Assume that <m>[G;*]</m> and <m>[H;\diamond ]</m> are groups. The following are reasons for <m>G</m> and <m>H</m> to be not isomorphic.
<ol marker="(a)">
<li><p>  <m>G</m> and <m>H</m> do not have the same cardinality. For example, <m>\mathbb{Z}_{12} \times  \mathbb{Z}_5</m> can't be isomorphic to <m>\mathbb{Z}_{50}</m> and <m>[\mathbb{R};+]</m> can't be isomorphic to <m>\left[\mathbb{Q}^+ ; \cdot \right]</m>.</p></li>
<li><p> <m>G</m> is abelian and <m>H</m> is not abelian since <m>a * b = b * a</m> is always true in <m>G</m>, but <m>T(a) \diamond  T(b) = T(b) \diamond T(a)</m> would not always be true. We have seen  two groups with six elements that apply here.  They are <m>\mathbb{Z}_6</m> and the group of <m>3 \times  3</m> rook matrices (see <xref ref="ex-rook-matrices" text="type-global" />). The second group is non-abelian, therefore it can't be isomorphic to <m>\mathbb{Z}_6</m>.</p></li>
<li><p>  <m>G</m> has a certain kind of subgroup that <m>H</m> doesn't have. Part (c) of <xref ref="theorem-isomorphism-properties" text="type-global" /> states that this cannot happen if <m>G</m>
is isomorphic to <m>H</m>. <m>\left[\mathbb{R}^* ; \cdot \right]</m> and <m>\left[\mathbb{R}^+ ; \cdot \right]</m> are not isomorphic since <m>\mathbb{R}^*</m> has a subgroup with two elements, <m>\{-1, 1\}</m>, while the proper subgroups of <m>\mathbb{R}^+</m> are all infinite (convince yourself of this fact!).</p></li>
<li><p>The number of solutions of <m>x * x = e</m> in <m>G</m> is not equal to the number of solutions of <m>y \diamond  y = e'</m> in <m>H</m>.
  <m>\mathbb{Z}_8</m> is not isomorphic to <m>\mathbb{Z}_2{}^3</m> since <m>x +_8 x = 0</m> has two solutions, 0 and 4, while <m>y + y = (0, 0, 0)</m> is true for all <m>y\in \mathbb{Z}_2{}^3</m>. If the operation in <m>G</m> is defined by a table, then the number of solutions of <m>x * x = e</m> will be the
number of occurrences of <m>e</m> in the main diagonal of the table. The equations <m>x^3 = e</m>, <m>x^4= e, \dots</m>  can also be used in the same way to identify pairs of non-isomorphic groups.</p></li>
<li><p>  One of the cyclic subgroups of <m>G</m> equals <m>G</m> (i. e., <m>G</m> is cyclic), while none of <m>H</m>'s cyclic subgroups equals <m>H</m> (i. e., <m>H</m> is noncyclic). This is a special case of Condition c. <m>\mathbb{Z}</m> and <m>\mathbb{Z} \times  \mathbb{Z}</m> are not isomorphic
since <m>\mathbb{Z} = \langle 1\rangle</m> and <m>\mathbb{Z} \times  \mathbb{Z}</m> is not cyclic.</p></li>
</ol>
</p>
</subsection>

<exercises xml:id="sss-exercises-11-7"><title>Exercises</title>



<exercise number="1"><statement><p>  State whether each pair of groups below is isomorphic. For each pair that is, give an isomorphism; for those that are not, give your reason.

<ol marker="(a)">
<li><p> <m>\mathbb{Z} \times  \mathbb{R}</m> and <m>\mathbb{R} \times  \mathbb{Z}</m></p></li>
<li><p> <m>\mathbb{Z}_2\times \mathbb{Z}</m>  and <m>\mathbb{Z} \times  \mathbb{Z}</m></p></li>
<li><p>  <m>\mathbb{R}</m> and <m>\mathbb{Q} \times  \mathbb{Q}</m></p></li>
<li><p>  <m>\mathcal{P}(\{1, 2\})</m> with symmetric difference and <m>\mathbb{Z}_2{}^2</m></p></li>
<li><p>  <m>\mathbb{Z}_2{}^2</m> and <m>\mathbb{Z}_4</m></p></li>
<li><p>   <m>\mathbb{R}^4</m> and <m>M_{2\times 2}(\mathbb{R})</m> with matrix addition</p></li>
<li><p>  <m>\mathbb{R}^2</m> and <m>\mathbb{R} \times  \mathbb{R}^+</m> </p></li>
<li><p>   <m>\mathbb{Z}_2</m> and the <m>2 \times  2</m> rook matrices</p></li>
<li><p>   <m>\mathbb{Z}_6</m> and <m>\mathbb{Z}_2\times  \mathbb{Z}_3</m> </p></li>
</ol>
</p>
</statement>
<answer><p>
<ol marker="(a)">
<li><p> Yes, <m>f(n, x) = (x, n)</m> for <m>(n, x) \in  \mathbb{Z} \times  \mathbb{R}</m> is an isomorphism. </p></li>
<li><p> No, <m>\mathbb{Z}_2\times  \mathbb{Z}</m> has a two element subgroup while <m>\mathbb{Z} \times  \mathbb{Z}</m> does not.</p></li>
<li><p> No. <m>\mathbb{Q} \times  \mathbb{Q}</m> is countable and <m>\mathbb{R}</m> is not.  Therefore, no bijection can exist between them. </p></li>
<li><p> Yes.</p></li>
<li><p>  No. </p></li>
<li><p> Yes,  one isomorphism is defined by <m>f\left(a_1, a_2,a_3,a_4\right)=\left(
\begin{array}{cc}
 a_1 &amp; a_2 \\
 a_3 &amp; a_4 \\
\end{array}
\right)</m>. </p></li>
<li><p> Yes, one isomorphism is defined by <m>f\left(a_1,a_2\right)=\left(a_1,10^{a_2}\right)</m>. </p></li>
<li><p> Yes. </p></li>
<li><p> Yes   <m>f(k) = k(1,1)</m>.</p></li>
</ol> 
</p></answer></exercise>
<exercise number="2"><statement><p>If you know two natural languages, show that they are not isomorphic.</p></statement></exercise>
<exercise number="3"><statement><p>Prove that the relation <q>is isomorphic to</q> on groups is transitive.</p></statement>
<answer><p>  Consider three groups <m>G_1</m>, <m>G_2</m>, and <m>G_3</m> with operations <m>*, \diamond , \textrm{ and } \star </m>, respectively. We want to show that if
<m>G_1</m> is isomorphic to <m>G_2</m>, and if <m>G_2</m> is isomorphic to <m>G_3</m> , then <m>G_1</m> is isomorphic to <m>G_3</m>.
<me>G_1 \textrm{ isomorphic} \textrm{ to } G_2\Rightarrow  \textrm{ there} \textrm{ exists} \textrm{ an} \textrm{ isomorphism } f:G_1\to G_2</me> 
<me>G_2 \textrm{ isomorphic} \textrm{ to } G_3\Rightarrow  \textrm{ there} \textrm{ exists} \textrm{ an} \textrm{ isomorphism } g:G_2\to G_3</me> 
If we compose <m>g</m> with <m>f</m>, we get the function <m>g\circ f:G_1\to G_3</m>,  By <xref ref="theorem-composition-of-injections" text="type-global" /> and <xref ref="theorem-composition-of-surjections" text="type-global" />, <m>g\circ f</m> is a bijection,
and if <m>a,b\in G_1</m>,
<me>
\begin{split}
(g\circ f)(a*b) &amp;=g(f(a*b))\\
&amp;=g(f(a)\diamond f(b))\quad  \textrm{ since } f \textrm{ is an isomorphism}\\
&amp; =g(f(a))\star g(f(b))\quad \textrm{ since } g \textrm{ is an isomorphism}\\
&amp; =(g\circ f)(a) \star (g\circ f)(b)
\end{split}
</me>
Therefore, <m>g\circ f</m> is an isomorphism from <m>G_1</m> into <m>G_3</m>, proving that <q>is isomorphic to</q> is transitive.
</p></answer>
</exercise>
<exercise number="4"><statement><p><ol marker="(a)">
<li><p> Write out the operation table for <m>G = [\{1, -1, i, -i \}; \cdot ]</m> where <m>i</m> is the complex number for which <m>i^2 = - 1</m>. Show that <m>G</m> is isomorphic to <m>\left[\mathbb{Z}_4;+_4\right]</m>.</p></li>
<li><p>Solve <m>x^2= -1</m> in <m>G</m> by first translating the equation to <m>\mathbb{Z}_4</m> , solving the equation in <m>\mathbb{Z}_4</m>, and then translating back to <m>G</m>. </p></li>
</ol>
</p>
</statement></exercise>

<exercise number="5"><statement><p> The two groups <m>\left[\mathbb{Z}_4;+_4\right]</m> and <m>\left[U_5;\times _5\right]</m> are isomorphic. One isomorphism <m>T:\mathbb{Z}_4\to U_5</m> is partially defined by <m>T(1)=3</m>. Determine the values of <m>T(0)</m>, <m>T(2)</m>, and <m>T(3)</m>.</p></statement>
<answer><p>By <xref ref="theorem-isomorphism-properties" text="type-global"/>(a), <m>T(0)</m> must be 1.   <m>T(2)=T(1+_4 1)=T(1)\times_5 T(1) = 3 \times_5 3 = 4</m>.  Since <m>T</m> is a bijection, <m>T(3)=2</m>.
</p></answer>
</exercise>

<exercise number="6"><statement><p>  Prove <xref ref="theorem-isomorphism-properties" text="type-global" />.</p></statement></exercise>
<exercise number="7"><statement><p>  Prove that all infinite cyclic groups are isomorphic to <m>\mathbb{Z}</m>.</p></statement>
<answer><p> Let <m>G</m> be an infinite cyclic group generated by <m>a</m>. Then, using multiplicative notation,  <m>G=\left\{\left.a^n\right| n\in \mathbb{Z}\right\}</m>.  The map <m>T: G \rightarrow \mathbb{Z}</m> defined by <m>T\left(a^n\right)=n</m> is an isomorphism. This is indeed a function, since <m>a^n=a^m</m> implies <m>n =m</m>.
Otherwise, <m>a</m> would have a finite order and would not generate <m>G</m>.</p>

<p><ol marker="(a)">
<li><p>  <m>T</m> is one-to-one, since <m>T\left(a^n\right) = T\left(a^m\right)</m> implies <m>n = m</m>, so <m>a^n= a^m</m>.
</p></li>
<li><p>  <m>T</m> is onto, since for any <m>n\in \mathbb{Z}</m>, <m>T\left(a^n\right) = n</m>.
</p></li>
<li><p>   <m>T\left(a^n*a^m \right) = T\left(a^{n+m}\right) =n + m\ =T\left(a^n\right)+T\left(a^m\right)</m></p></li>
</ol></p>
</answer>

</exercise>
<exercise number="8"><statement><p><ol marker="(a)">
<li><p>Prove that <m>\mathbb{R}^*</m> is isomorphic to <m>\mathbb{Z}_2 \times  \mathbb{R}</m>.</p></li>
<li><p> Describe how multiplication of nonzero real numbers can be accomplished doing only additions and translations. </p></li>
</ol>
</p>
</statement></exercise>
<exercise number="9"><idx><h>Automorphism</h><h>Inner</h></idx><statement><p>
 Prove that if <m>G</m> is any group and <m>g</m> is some fixed element of <m>G</m>, then the function <m>\phi _g</m> defined by <m>\phi_g(x) = g*x*g^{-1}</m> is an isomorphism from <m>G</m> into itself.  An isomorphism of this type is called an inner automorphism.</p></statement>
</exercise>
<exercise number="10"><statement><p>
Prove that <q>is isomorphic to</q> is an equivalence relation on the set of all groups by expanding on the observations made immediately after the definiton of an isomorphism.</p></statement>
</exercise>

<exercise number="11"><statement><p>  It can be shown that there are five non-isomorphic groups of order eight. You should be able to describe at least three of them. Do so without use of tables. Be sure to explain why they are not isomorphic.</p></statement>
<answer><p>  <m>\mathbb{Z}_8</m>, <m>\mathbb{Z}_2\times  \mathbb{Z}_4</m> , and <m>\mathbb{Z}_2^3</m>. One other is the fourth dihedral group, introduced in Section 15.3. 
</p></answer>
</exercise>

<exercise>
<statement><p>In <xref ref="s-algebraic-systems" text="type-global"/> we posed the question of whether the two monoids <m>[\mathcal{P}(U);\cap]</m> and  <m>[\mathcal{P}(U);\cup]</m>, both monoids on the power set of some nonempty universal set <m>U</m>, are different or really the same.  At the time we didn't have the notion of isomorphism to draw upon.  Now that we do, determine whether they are isomorphic monoids. </p>
</statement>
</exercise>


<exercise>
<statement><p>Prove that the number of 3's in an order sequence is even. </p>
</statement>
<answer><p>Each 3 is the order of an element whose inverse is it's square; i.  e., if <m>a</m> has order 3, <m>a^2=a^{-1}</m> is distinct from <m>a</m> and also has order 3 and contributes a second matching 3.</p>
</answer>
</exercise>
<exercise>
<statement><p>Prove that the number of 5's an order sequence is a multiple of four. </p>
</statement>
<!-- 
<answer><p> <m>\</m></p>
</answer>
 -->
</exercise>
</exercises>
</section>

